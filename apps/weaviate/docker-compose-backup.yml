---
version: '3.9'
services:
  weaviate-node-1:
    init: true
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8080'
    - --scheme
    - http
    image: semitechnologies/weaviate:$WEAVIATE_NODE_1_VERSION
    ports:
    - 8080:8080
    - 6060:6060
    restart: on-failure:0
    environment:
      LOG_LEVEL: 'debug'
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'backup-s3'
      BACKUP_FILESYSTEM_PATH: '/var/lib/backups'
      CLUSTER_HOSTNAME: 'node1'
      CLUSTER_GOSSIP_BIND_PORT: '7100'
      CLUSTER_DATA_BIND_PORT: '7101'
      RAFT_BOOTSTRAP_EXPECT: 1
      RAFT_JOIN: "node1"
      BACKUP_S3_ENDPOINT: 'backup-s3:9000'
      BACKUP_S3_BUCKET: 'weaviate-backups'
      AWS_ACCESS_KEY_ID: 'aws_access_key'
      AWS_SECRET_KEY: 'aws_secret_key'
      BACKUP_S3_USE_SSL: 'false'
      PERSISTENCE_LSM_ACCESS_STRATEGY: '${PERSISTENCE_LSM_ACCESS_STRATEGY}'
      DISABLE_TELEMETRY: 'true'

  # Mutually exclusive with weaviate-node-2
  # Used for single-node BRO version compat
  weaviate-backup-node:
    init: true
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8081'
    - --scheme
    - http
    image: semitechnologies/weaviate:$WEAVIATE_NODE_2_VERSION
    ports:
    - 8081:8081
    - 6061:6060
    restart: on-failure:0
    environment:
      LOG_LEVEL: 'debug'
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'backup-s3'
      BACKUP_FILESYSTEM_PATH: '/var/lib/backups'
      CLUSTER_HOSTNAME: 'node1'
      BACKUP_S3_ENDPOINT: 'backup-s3:9000'
      BACKUP_S3_BUCKET: 'weaviate-backups'
      AWS_ACCESS_KEY_ID: 'aws_access_key'
      AWS_SECRET_KEY: 'aws_secret_key'
      BACKUP_S3_USE_SSL: 'false'
      PERSISTENCE_LSM_ACCESS_STRATEGY: '${PERSISTENCE_LSM_ACCESS_STRATEGY}'
      DISABLE_TELEMETRY: 'true'

  # Mutually exclusive with weaviate-backup-node
  # Used for cluster backup scenarios
  weaviate-node-2:
    init: true
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8081'
    - --scheme
    - http
    image: semitechnologies/weaviate:$WEAVIATE_NODE_2_VERSION
    ports:
    - 8081:8081
    - 6061:6060
    restart: on-failure:0
    environment:
      LOG_LEVEL: 'debug'
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'backup-s3'
      BACKUP_FILESYSTEM_PATH: '/var/lib/backups'
      CLUSTER_HOSTNAME: 'node2'
      CLUSTER_GOSSIP_BIND_PORT: '7102'
      CLUSTER_DATA_BIND_PORT: '7103'
      CLUSTER_JOIN: 'weaviate-node-1:7100'
      RAFT_JOIN: 'node1'
      BOOTSTRAP_EXPECT: 1
      BACKUP_S3_ENDPOINT: 'backup-s3:9000'
      BACKUP_S3_BUCKET: 'weaviate-backups'
      AWS_ACCESS_KEY_ID: 'aws_access_key'
      AWS_SECRET_KEY: 'aws_secret_key'
      BACKUP_S3_USE_SSL: 'false'
      PERSISTENCE_LSM_ACCESS_STRATEGY: '${PERSISTENCE_LSM_ACCESS_STRATEGY}'
      DISABLE_TELEMETRY: 'true'

  backup-s3:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - ./backups-s3:/data
    environment:
      MINIO_ROOT_USER: 'aws_access_key'
      MINIO_ROOT_PASSWORD: 'aws_secret_key'
    command: server /data

  create-s3-bucket:
    image: minio/mc
    depends_on:
      - backup-s3
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set chaos http://backup-s3:9000 aws_access_key aws_secret_key;
      /usr/bin/mc mb chaos/weaviate-backups;
      /usr/bin/mc policy set public chaos/weaviate-backups;
      exit 0;
      "

  remove-s3-bucket:
    image: minio/mc
    depends_on:
      - backup-s3
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set chaos http://backup-s3:9000 aws_access_key aws_secret_key;
      /usr/bin/mc rb --force chaos/weaviate-backups;
      exit 0;
      "
...
