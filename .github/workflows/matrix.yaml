name: Test matrix

on:
  workflow_dispatch:
    inputs:
      weaviate_version:
        description: "The weaviate docker image to version to run tests against"
        type: string
        required: true
      weaviate_max_major_version_test_set:
        description: "The weaviate max major version run tests against 1.24, 1.25, 1.26 etc. by default all will run"
        type: number
        default: 0
        required: false  
  schedule:
    - cron: '0 0 */2 * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || inputs.weaviate_version || github.ref }}
  cancel-in-progress: true

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  weaviate-version-information:
    runs-on: ubuntu-latest
    env:
      weaviate_version: ${{ github.event_name == 'schedule' && 'latest' || inputs.weaviate_version || '1.26.1' }}
    outputs:
      weaviate_version: ${{ steps.set-output.outputs.weaviate_version }}
    steps:
      - id: set-output
        run: |
          echo "Running chaos pipelines against Weaviate version: $weaviate_version" >> $GITHUB_STEP_SUMMARY
          echo "weaviate_version=${{ env.weaviate_version }}" >> $GITHUB_OUTPUT
  run-with-sync-indexing:
    needs: weaviate-version-information
    strategy:
      fail-fast: false
      matrix:
        lsm_access_strategy: ["mmap", "pread"]
    uses: ./.github/workflows/tests.yaml
    with:
      lsm_access_strategy: ${{matrix.lsm_access_strategy}}
      weaviate_version: ${{ needs.weaviate-version-information.outputs.weaviate_version }}
    secrets:
      AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      GCP_SERVICE_ACCOUNT_BENCHMARKS: ${{secrets.GCP_SERVICE_ACCOUNT_BENCHMARKS}}
      POLARSIGNALS_TOKEN: ${{secrets.POLARSIGNALS_TOKEN}}
  # Job that triggers weaviatest.yaml after all tests in run-with-sync-indexing pass
  trigger-weaviatest:
    needs: weaviate-version-information
    strategy:
      fail-fast: false
      matrix:
        number_nodes: [3, 7]
    uses: ./.github/workflows/weaviatest.yaml
    with:
      number_nodes: ${{ matrix.number_nodes }}
      weaviate_version: ${{ needs.weaviate-version-information.outputs.weaviate_version }}
  send-slack-message-on-failure:
    needs: [weaviate-version-information, run-with-sync-indexing, trigger-weaviatest]
    if: failure() && github.event_name == 'schedule'
    runs-on: ubuntu-latest
    env:
      SLACK_CHANNEL: 'C074U2W8FU3'
    steps:
      - name: Send Slack message
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # This data has been defined as a Workflow in the slack channel chaos-pipeline
          payload: |
            {
              "message": "Chaos pipeline failed for Weaviate version: ${{ needs.weaviate-version-information.outputs.weaviate_version}}}.\nLink: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "slack_channel": "${{ env.SLACK_CHANNEL }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
